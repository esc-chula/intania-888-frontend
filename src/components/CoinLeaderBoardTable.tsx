import { getColorLeaderboard } from "@/api/match/getColorLeaderboard";

export const CoinLeaderBoardTable = () => {
  return (
    <table className="rounded-lg w-[90vw] sm:w-[600px] overflow-hidden text-[0.8rem] sm:text-[1rem] h-auto">
      <thead className="bg-[#4E0F15] font-semibold h-12 flex flex-row">
        <tr className="w-full flex flex-row">
          <td className="flex items-center justify-center w-[10%] h-full">
            ‡∏•‡∏≥‡∏î‡∏±‡∏ö
          </td>
          <td className="flex items-center justify-start w-[20%] h-full ">
            ‡∏™‡∏µ
          </td>
          <td className="flex items-center justify-start w-[20%] h-full ">
            ‡∏Å‡∏£‡∏∏‡πä‡∏õ
          </td>
          <td className="flex flex-row space-x-2 items-center justify-end pr-2 sm:pr-10 w-[16%] h-full ">
            1st üèÜ
          </td>
          <td className="flex flex-row space-x-2 items-center justify-end pr-2 sm:pr-10 w-[16%] h-full ">
            2nd ü•à
          </td>
          <td className="flex flex-row space-x-2 items-center justify-end pr-2 sm:pr-10 w-[16%] h-full ">
            3-4th ü•â
          </td>
        </tr>
      </thead>
      <tbody>
        {Top10.map((item, index) => {
          return (
            <tr
              key={index}
              className="text-black w-full bg-white font-semibold h-12 flex flex-row border-y-[0.5px]"
            >
              <td className="flex items-center justify-center w-[10%] h-full ">
                {index + 1}
              </td>
              <td className="flex items-center justify-start w-[20%] h-full ">
                <NameAndColor name={item.name} color={item.color} />
              </td>
              <td className="flex items-center justify-start w-[20%] h-full ">
                {groupColor[item.color]}
              </td>
              <td className="flex flex-row space-x-2 items-center justify-end pr-10 sm:pr-20 w-[30%] h-full ">
                {10}
              </td>
              <td className="flex flex-row space-x-2 items-center justify-end pr-10 sm:pr-20 w-[30%] h-full ">
                {0}
              </td>
              <td className="flex flex-row space-x-2 items-center justify-end pr-10 sm:pr-20 w-[30%] h-full ">
                {0}
              </td>
            </tr>
          );
        })}
      </tbody>
    </table>
  );
};

const Top10 = [
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏°", color: "pink" },
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡∏Å‡πâ‡∏≠‡∏ô", color: "blue" },
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡∏ï‡πâ‡∏≤‡∏ß", color: "green" },
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡πÄ‡∏ò‡∏≠", color: "yellow" },
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡∏â‡∏±‡∏ô", color: "orange" },
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡πÄ‡∏¢‡πà‡∏∞", color: "violet" },
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡∏ô‡∏µ‡∏£", color: "pink" },
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡πÅ‡∏ö‡∏á‡∏Ñ‡πå", color: "violet" },
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡∏õ‡∏±‡∏ç", color: "blue" },
  { name: "‡πÄ‡∏à‡πâ‡∏≤‡πÄ‡∏à‡πâ‡∏≤", color: "yellow" },
];

const groupColor: { [key: string]: string } = {
  PINK: "[E,L,P]",
  ORANGE: "[J,K,M]",
  GREEN: "[H,S,T]",
  BLUE: "[Dog,N,R]",
  VIOLET: "[A,C,F]",
  YELLOW: "[B,G,Q]",
};
const NameAndColor = (props: { name: string; color: string }) => {
  if (props.color == "VIOLET")
    return (
      <p>
        {props.name} <span className="text-team-violet">‡∏™‡∏µ‡∏°‡πà‡∏ß‡∏á </span>
      </p>
    );
  if (props.color == "BLUE")
    return (
      <p>
        {props.name} <span className="text-team-blue">‡∏™‡∏µ‡∏ü‡πâ‡∏≤</span>
      </p>
    );
  if (props.color == "YELLOW")
    return (
      <p>
        {props.name} <span className="text-team-yellow">‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á</span>
      </p>
    );
  if (props.color == "GREEN")
    return (
      <p>
        {props.name} <span className="text-team-green">‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß</span>
      </p>
    );
  if (props.color == "PINK")
    return (
      <p>
        {props.name} <span className="text-team-pink">‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π</span>
      </p>
    );
  if (props.color == "ORANGE")
    return (
      <p>
        {props.name} <span className="text-team-orange">‡∏™‡∏µ‡∏™‡πâ‡∏°</span>
      </p>
    );
};
